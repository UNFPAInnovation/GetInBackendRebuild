from django.urls import reverse
from django.utils.crypto import get_random_string
from rest_framework import status
from app.models import *
from app.tests.parenttest import ParentTest


class TestViews(ParentTest):
    def test_appointment_view(self):
        """
        Test how different users access appointments.
        Midwife should see all appointments from her VHTs as well as hers
        DHO should see all appointments generated by Midwives and VHTs
        """
        last_name = get_random_string(length=7)
        girl = Girl.objects.create(user=self.chew, first_name=get_random_string(length=7), marital_status=SINGLE,
                                   last_name=last_name, dob=timezone.now() - timezone.timedelta(days=4000), village=self.village,
                                   last_menstruation_date=timezone.now() - timezone.timedelta(weeks=12), phone_number="0756789543",
                                   education_level=PRIMARY_LEVEL)

        girl2 = Girl.objects.create(user=self.chew, first_name=get_random_string(length=7), marital_status=SINGLE,
                                   last_name=last_name, dob=timezone.now() - timezone.timedelta(days=4500), village=self.village,
                                   last_menstruation_date=timezone.now() - timezone.timedelta(weeks=8), phone_number="0756783333",
                                   education_level=O_LEVEL)

        girl3 = Girl.objects.create(user=self.midwife, first_name=get_random_string(length=7), marital_status=MARRIED,
                                    last_name=last_name, dob=timezone.now() - timezone.timedelta(days=4000),
                                    village=self.village,
                                    last_menstruation_date=timezone.now() - timezone.timedelta(weeks=7),
                                    phone_number="0756783334",
                                    education_level=O_LEVEL)

        Appointment.objects.create(girl=girl, user=self.midwife, date=timezone.now() + timezone.timedelta(weeks=2))
        Appointment.objects.create(girl=girl, user=self.chew, date=timezone.now() + timezone.timedelta(weeks=2))
        Appointment.objects.create(girl=girl2, user=self.chew, date=timezone.now() + timezone.timedelta(weeks=1))
        Appointment.objects.create(girl=girl3, user=self.midwife2, date=timezone.now() + timezone.timedelta(weeks=1))

        url = reverse("appointments")

        self.client.force_authenticate(user=self.chew)
        request = self.client.get(url)
        self.assertEqual(request.status_code, status.HTTP_200_OK)
        self.assertEqual(request.json()['count'], 3)

        self.client.force_authenticate(user=self.midwife)
        request = self.client.get(url)
        self.assertEqual(request.status_code, status.HTTP_200_OK)
        self.assertEqual(request.json()['count'], 3)

        self.client.force_authenticate(user=self.midwife2)
        request = self.client.get(url)
        self.assertEqual(request.status_code, status.HTTP_200_OK)
        self.assertEqual(request.json()['count'], 1)

        self.client.force_authenticate(user=self.dho)
        request = self.client.get(url)
        self.assertEqual(request.status_code, status.HTTP_200_OK)
        self.assertEqual(request.json()['count'], 4)

